"""добавил каскадное удаление данных

Revision ID: 1b92955a965a
Revises: 91d5fc1be3db
Create Date: 2023-08-29 20:58:04.531082

"""
from collections.abc import Sequence

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '1b92955a965a'
down_revision: str | None = '91d5fc1be3db'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('follower_follower_id_fkey', 'follower', type_='foreignkey')
    op.drop_constraint('follower_user_id_fkey', 'follower', type_='foreignkey')
    op.create_foreign_key(None, 'follower', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'follower', 'user', ['follower_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('like_user_id_fkey', 'like', type_='foreignkey')
    op.create_foreign_key(None, 'like', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('like_game_game_id_fkey', 'like_game', type_='foreignkey')
    op.drop_constraint('like_game_list_id_fkey', 'like_game', type_='foreignkey')
    op.create_foreign_key(None, 'like_game', 'game', ['game_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'like_game', 'like', ['list_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('list_owner_id_fkey', 'list', type_='foreignkey')
    op.create_foreign_key(None, 'list', 'user', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('list_game_list_id_fkey', 'list_game', type_='foreignkey')
    op.drop_constraint('list_game_game_id_fkey', 'list_game', type_='foreignkey')
    op.create_foreign_key(None, 'list_game', 'list', ['list_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'list_game', 'game', ['game_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('list_user_list_id_fkey', 'list_user', type_='foreignkey')
    op.drop_constraint('list_user_user_id_fkey', 'list_user', type_='foreignkey')
    op.create_foreign_key(None, 'list_user', 'list', ['list_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'list_user', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('passed_user_id_fkey', 'passed', type_='foreignkey')
    op.create_foreign_key(None, 'passed', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('passed_game_game_id_fkey', 'passed_game', type_='foreignkey')
    op.drop_constraint('passed_game_list_id_fkey', 'passed_game', type_='foreignkey')
    op.create_foreign_key(None, 'passed_game', 'game', ['game_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'passed_game', 'passed', ['list_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('review_game_id_fkey', 'review', type_='foreignkey')
    op.drop_constraint('review_user_id_fkey', 'review', type_='foreignkey')
    op.create_foreign_key(None, 'review', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'review', 'game', ['game_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('wantplay_user_id_fkey', 'wantplay', type_='foreignkey')
    op.create_foreign_key(None, 'wantplay', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('wantplay_game_list_id_fkey', 'wantplay_game', type_='foreignkey')
    op.drop_constraint('wantplay_game_game_id_fkey', 'wantplay_game', type_='foreignkey')
    op.create_foreign_key(None, 'wantplay_game', 'game', ['game_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'wantplay_game', 'wantplay', ['list_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'wantplay_game', type_='foreignkey')
    op.drop_constraint(None, 'wantplay_game', type_='foreignkey')
    op.create_foreign_key('wantplay_game_game_id_fkey', 'wantplay_game', 'game', ['game_id'], ['id'])
    op.create_foreign_key('wantplay_game_list_id_fkey', 'wantplay_game', 'wantplay', ['list_id'], ['id'])
    op.drop_constraint(None, 'wantplay', type_='foreignkey')
    op.create_foreign_key('wantplay_user_id_fkey', 'wantplay', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'review', type_='foreignkey')
    op.drop_constraint(None, 'review', type_='foreignkey')
    op.create_foreign_key('review_user_id_fkey', 'review', 'user', ['user_id'], ['id'])
    op.create_foreign_key('review_game_id_fkey', 'review', 'game', ['game_id'], ['id'])
    op.drop_constraint(None, 'passed_game', type_='foreignkey')
    op.drop_constraint(None, 'passed_game', type_='foreignkey')
    op.create_foreign_key('passed_game_list_id_fkey', 'passed_game', 'passed', ['list_id'], ['id'])
    op.create_foreign_key('passed_game_game_id_fkey', 'passed_game', 'game', ['game_id'], ['id'])
    op.drop_constraint(None, 'passed', type_='foreignkey')
    op.create_foreign_key('passed_user_id_fkey', 'passed', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'list_user', type_='foreignkey')
    op.drop_constraint(None, 'list_user', type_='foreignkey')
    op.create_foreign_key('list_user_user_id_fkey', 'list_user', 'user', ['user_id'], ['id'])
    op.create_foreign_key('list_user_list_id_fkey', 'list_user', 'list', ['list_id'], ['id'])
    op.drop_constraint(None, 'list_game', type_='foreignkey')
    op.drop_constraint(None, 'list_game', type_='foreignkey')
    op.create_foreign_key('list_game_game_id_fkey', 'list_game', 'game', ['game_id'], ['id'])
    op.create_foreign_key('list_game_list_id_fkey', 'list_game', 'list', ['list_id'], ['id'])
    op.drop_constraint(None, 'list', type_='foreignkey')
    op.create_foreign_key('list_owner_id_fkey', 'list', 'user', ['owner_id'], ['id'])
    op.drop_constraint(None, 'like_game', type_='foreignkey')
    op.drop_constraint(None, 'like_game', type_='foreignkey')
    op.create_foreign_key('like_game_list_id_fkey', 'like_game', 'like', ['list_id'], ['id'])
    op.create_foreign_key('like_game_game_id_fkey', 'like_game', 'game', ['game_id'], ['id'])
    op.drop_constraint(None, 'like', type_='foreignkey')
    op.create_foreign_key('like_user_id_fkey', 'like', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'follower', type_='foreignkey')
    op.drop_constraint(None, 'follower', type_='foreignkey')
    op.create_foreign_key('follower_user_id_fkey', 'follower', 'user', ['user_id'], ['id'])
    op.create_foreign_key('follower_follower_id_fkey', 'follower', 'user', ['follower_id'], ['id'])
    # ### end Alembic commands ###
